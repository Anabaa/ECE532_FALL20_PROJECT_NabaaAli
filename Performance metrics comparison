import random
fig , ax = plt.subplots(figsize=(9,9),dpi=80)
methods = np.array(['Least Squares','Ridge','LASSO ','LS with 5 features','Linear SVM','KNN with k =40 '])
errors = np.array([1-avg_err,1-err_tot_l2,1-err_tot_l1,1-avg_err_select,1-err_tot_sv,1-np.mean(err_list)])
all_colors = list(plt.cm.colors.cnames.keys())
random.seed(100)
col = random.choices(all_colors,k=7)
ax.bar(methods,errors,color=col,width = 0.5)
#ax.scatter(methods,errors,s=75,color='firebrick',alpha=0.7)
for i, val in enumerate(errors):
    plt.text(i, val, val.round(4), horizontalalignment='center', verticalalignment='bottom', fontdict={'fontweight':500, 'size':12})
    plt.ylabel('Accuracy %', fontsize = 16)
plt.title("Accuracy of Classifiers Tested", fontsize=18)
plt.ylim(0, 1)
plt.show()
fig.savefig("Accuracy_of_Classifiers.pdf")


## Plot the residual of LS,Ridge, LASSO regression ,LS with 5 features (slected using LASSO) and Linear SVM
fig , ax = plt.subplots(figsize=(9,9),dpi=80)
methods = np.array(['Least Squares','Ridge','LASSO ','LS with 5 features','Linear SVM'])
residuals = np.array([avg_resd.round(2),res_tot_l2.round(2),res_tot_l1.round(2),avg_resd_select.round(3),res_tot_sv.round(2)])
all_colors = list(plt.cm.colors.cnames.keys())
random.seed(100)
col = random.choices(all_colors,k=5)
ax.bar(methods,residuals,color=col,width = 0.5)
#ax.scatter(methods,errors,s=75,color='firebrick',alpha=0.7)
for i, val in enumerate(errors):
    plt.text(i, val, val.round(4), horizontalalignment='center', verticalalignment='bottom', fontdict={'fontweight':500, 'size':12})
plt.ylabel('Residual $||Xw - y||_{2}$', fontsize = 16)
plt.title("Residual $||Xw - y||_{2}$  of Linear classifiers Tested", fontsize=18)
plt.ylim(0, 150)
plt.show()
fig.savefig("Residual of Linear classifiers Tested.pdf")
